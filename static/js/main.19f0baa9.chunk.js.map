{"version":3,"sources":["pages/About.js","context/index.js","styles/theme.js","styles/styles.js","UI/MyButton/index.js","UI/MyInput/index.js","pages/Login.js","API/PostService.js","customHooks/useFetching.js","UI/MyLoader/index.js","pages/PostIdPage.js","UI/MySelect/index.js","components/PostFilter/index.js","components/PostItem/index.js","components/PostList/index.js","customHooks/usePosts.js","UI/Backdrop/index.js","components/PostForm/index.js","UI/MyModal/index.js","utils/pages.js","UI/MyPagination/index.js","router/index.js","pages/Posts.js","components/AppRouter/index.js","UI/MyNavbar/index.js","App.js","styles/Global.js","index.js"],"names":["About","AuthContext","createContext","theme","colors","green","blue","black","red","white","PostContent","styled","motion","div","ButtonStyle","button","attrs","props","className","light","css","InputStyle","input","SelectStyle","select","ModalContentStyle","BackdropStyle","LoaderStyle","PageWrapperStyle","NavbarStyle","nav","GridStyle","MyButton","children","whileHover","scale","whileTap","MyInput","Login","setIsAuth","useContext","style","margin","width","display","flexDirection","onSubmit","event","preventDefault","localStorage","setItem","type","placeholder","PostService","limit","page","axios","get","params","_limit","_page","response","id","useFetching","callback","useState","isLoading","setIsLoading","error","setError","a","message","MyLoader","animate","rotate","transition","times","duration","repeat","Infinity","repeatType","ease","PostIdPage","useParams","setPost","comments","setComments","getById","data","fetchPostById","getCommentsByPostId","fetchComments","useEffect","map","comm","index","marginTop","email","body","MySelect","options","defaultValue","value","onChange","target","disabled","option","name","PostFilter","filter","setFilter","query","e","sort","selectedSort","PostItem","post","removePost","number","router","useHistory","onClick","push","title","marginLeft","stopPropagation","handleRemove","PostList","posts","variants","initial","opacity","textAlign","length","justifyContent","usePosts","sortedPosts","useMemo","b","localeCompare","prev","next","useSortedPosts","toLowerCase","includes","Backdrop","exit","oapcity","PostForm","createPost","newPost","Date","now","flip","hidden","transform","delay","visible","MyModal","handleClose","drag","dragConstraints","left","right","top","bottom","getPageCount","totalCount","Math","ceil","Pagination","totalPages","changePage","pagesArray","result","i","getPagesArray","p","privateRoutes","path","component","exact","setPosts","modalOpen","setModalOpen","sortedAndFilteredPosts","setTotalPages","setLimit","setPage","close","getAll","headers","fetchPosts","isPostLoading","AnimatePresence","exitBeforeEnter","onExitComplete","alignItems","publicRoutes","AppRouter","isAuth","route","to","MyNavbar","removeItem","App","getItem","Provider","Global","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19f0baa9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst About = () => {\r\n  return <h1>Text</h1>;\r\n};\r\n\r\nexport default About;\r\n","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext(null);\r\n","const theme = {\r\n  colors: {\r\n    green: \"green\",\r\n    blue: \"#15cdfc\",\r\n    black: \"#000\",\r\n    red: \"#ef5350\",\r\n    white: \"white\",\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import styled, { css } from \"styled-components\";\r\nimport theme from \"./theme\";\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport const PostContent = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 15px;\r\n  border: 2px solid ${theme.colors.green};\r\n  margin-top: 20px;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  border-radius: 10px;\r\n  min-height: 200px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const ButtonStyle = styled(motion.button).attrs((props) => ({\r\n  className: props.className,\r\n}))`\r\n  color: ${theme.colors.green};\r\n  padding: 5px 15px;\r\n  font-size: 15px;\r\n  background: transparent;\r\n  border: 1px solid ${theme.colors.green};\r\n  cursor: pointer;\r\n  border-radius: 10px;\r\n  :hover {\r\n    background: rgba(0, 0, 0, 0.05);\r\n  }\r\n  &.PageButtonStyle {\r\n    margin-left: 10px;\r\n  }\r\n  &.pageCurrentStyle {\r\n    background: rgba(0, 0, 0, 0.1);\r\n  }\r\n  ${(props) =>\r\n    props.light &&\r\n    css`\r\n      color: ${theme.colors.white};\r\n      border: 1px solid ${theme.colors.white};\r\n    `}\r\n`;\r\n\r\nexport const InputStyle = styled.input`\r\n  width: 100%;\r\n  margin: 5px 0;\r\n  padding: 5px 15px;\r\n  color: ${theme.colors.green};\r\n  font-size: 15px;\r\n  background: transparent;\r\n  border: 2px solid ${theme.colors.green};\r\n  border-radius: 10px;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const SelectStyle = styled.select`\r\n  width: 20%;\r\n  border: 1px solid ${theme.colors.green};\r\n  color: ${theme.colors.green};\r\n  border-radius: 10px;\r\n  margin-top: 5px;\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const ModalContentStyle = styled(motion.div)`\r\n  width: clamp(15%, 600px, 90%);\r\n  height: min(50%, 200px);\r\n\r\n  margin: auto;\r\n  background: white;\r\n  padding: 25px;\r\n  border-radius: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n// export const ModalStyle = styled(motion.div).attrs((props) => ({\r\n//   className: props.className,\r\n// }))`\r\n//   &.active {\r\n//     display: flex;\r\n//     justify-content: center;\r\n//     align-items: center;\r\n//   }\r\n//   position: absolute;\r\n//   top: 0;\r\n//   bottom: 0;\r\n//   right: 0;\r\n//   left: 0;\r\n//   display: none;\r\n//   background: rgba(0, 0, 0, 0.5);\r\n// `;\r\nexport const BackdropStyle = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LoaderStyle = styled(motion.div)`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  border: 3px dotted ${theme.colors.green};\r\n`;\r\n\r\nexport const PageWrapperStyle = styled(motion.div)`\r\n  margin: 20px auto;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const NavbarStyle = styled.nav`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 15px;\r\n  background: ${theme.colors.red};\r\n  z-index: 100;\r\n  position: sticky;\r\n  top: 0;\r\n`;\r\n\r\nexport const GridStyle = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n  gap: 20px 20px;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport { ButtonStyle } from \"../../styles/styles\";\r\n\r\nconst MyButton = ({ children, ...props }) => {\r\n  return (\r\n    <ButtonStyle\r\n      {...props}\r\n      whileHover={{ scale: 1.1 }}\r\n      whileTap={{ scale: 0.9 }}\r\n    >\r\n      {children}\r\n    </ButtonStyle>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","import React from \"react\";\r\nimport { InputStyle } from \"../../styles/styles\";\r\n\r\nconst MyInput = (props) => {\r\n  return <InputStyle {...props}></InputStyle>;\r\n};\r\nexport default MyInput;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../context\";\r\nimport MyButton from \"../UI/MyButton\";\r\nimport MyInput from \"../UI/MyInput\";\r\n\r\nconst Login = () => {\r\n  const { setIsAuth } = useContext(AuthContext);\r\n\r\n  const login = (event) => {\r\n    event.preventDefault();\r\n    setIsAuth(true);\r\n    localStorage.setItem(\"auth\", \"true\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        margin: \"0 auto\",\r\n        width: \"25%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <h1>Login</h1>\r\n      <form onSubmit={login}>\r\n        <MyInput type=\"text\" placeholder=\"just push the button\" />\r\n        <MyInput type=\"password\" placeholder=\"just push the button\" />\r\n        <MyButton>Log in</MyButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\n\r\nexport default class PostService {\r\n  static async getAll(limit = 10, page = 1) {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/posts/\",\r\n      {\r\n        params: {\r\n          _limit: limit,\r\n          _page: page,\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  }\r\n  static async getById(id) {\r\n    const response = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/posts/\" + id\r\n    );\r\n    return response;\r\n  }\r\n  static async getCommentsByPostId(id) {\r\n    const response = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/posts/${id}/comments`\r\n    );\r\n    return response;\r\n  }\r\n}\r\n","import { useState } from \"react\";\r\n\r\n//хук обрабатывает индикатор загрузки, обработка ошибки и выполнение калбека\r\n\r\nexport const useFetching = (callback) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const fetching = async (...args) => {\r\n    try {\r\n      setIsLoading(true);\r\n      await callback(...args);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return [fetching, isLoading, error];\r\n};\r\n","import React from \"react\";\r\nimport { LoaderStyle } from \"../../styles/styles\";\r\n\r\nconst MyLoader = () => {\r\n  return (\r\n    <LoaderStyle\r\n      animate={{\r\n        rotate: 360,\r\n        scale: [1, 1.5, 2],\r\n      }}\r\n      transition={{\r\n        times: [0, 1.5, 2],\r\n        duration: 3,\r\n        repeat: Infinity,\r\n        repeatType: \"loop\",\r\n        ease: \"linear\",\r\n      }}\r\n    ></LoaderStyle>\r\n  );\r\n};\r\n\r\nexport default MyLoader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport PostService from \"../API/PostService\";\r\nimport { useFetching } from \"../customHooks/useFetching\";\r\nimport MyLoader from \"../UI/MyLoader\";\r\nconst PostIdPage = () => {\r\n  const params = useParams();\r\n  const [post, setPost] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [fetchPostById, isLoading, error] = useFetching(async () => {\r\n    const response = await PostService.getById(params.id);\r\n    setPost(response.data);\r\n  });\r\n  const [fetchComments, isCommentLoading, commentError] = useFetching(\r\n    async () => {\r\n      const response = await PostService.getCommentsByPostId(params.id);\r\n      setComments(response.data);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchPostById(params.id);\r\n    fetchComments(params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <MyLoader />\r\n      ) : (\r\n        <div>\r\n          <h1>It's a page with post ID = {params.id}</h1>\r\n          {comments.map((comm, index) => (\r\n            <div style={{ marginTop: 15 }} key={index}>\r\n              <h5>{comm.email}</h5>\r\n              <div>{comm.body}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostIdPage;\r\n","import React from \"react\";\r\nimport { SelectStyle } from \"../../styles/styles\";\r\n\r\nconst MySelect = ({ options, defaultValue, value, onChange }) => {\r\n  return (\r\n    <SelectStyle\r\n      value={value}\r\n      onChange={(event) => onChange(event.target.value)}\r\n    >\r\n      <option disabled value=\"\">\r\n        {defaultValue}\r\n      </option>\r\n      {options.map((option, index) => (\r\n        <option key={index + 1} value={option.value}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </SelectStyle>\r\n  );\r\n};\r\nexport default MySelect;\r\n","import React from \"react\";\r\nimport MySelect from \"../../UI/MySelect\";\r\nimport MyInput from \"../../UI/MyInput\";\r\n//этот компонент нужен для сортировок и фильтрации\r\nconst PostFilter = ({ filter, setFilter }) => {\r\n  return (\r\n    <div>\r\n      <MyInput\r\n        value={filter.query}\r\n        placeholder=\"Search...\"\r\n        onChange={(e) => setFilter({ ...filter, query: e.target.value })}\r\n      />\r\n      <MySelect\r\n        value={filter.sort}\r\n        defaultValue=\"Sorting\"\r\n        options={[\r\n          { value: \"title\", name: \"By title\" },\r\n          { value: \"body\", name: \"By description\" },\r\n          { value: \"id\", name: \"By number\" },\r\n        ]}\r\n        onChange={(selectedSort) =>\r\n          setFilter({ ...filter, sort: selectedSort })\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostFilter;\r\n","import React from \"react\";\r\nimport MyButton from \"../../UI/MyButton\";\r\nimport { PostContent } from \"../../styles/styles\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst PostItem = ({ post, number, removePost }) => {\r\n  const handleRemove = (e) => {\r\n    e.stopPropagation();\r\n    removePost(post);\r\n  };\r\n  const router = useHistory();\r\n  return (\r\n    <PostContent onClick={() => router.push(`/posts/${post.id}`)}>\r\n      <div>\r\n        <strong>\r\n          {post.id}. {post.title}\r\n        </strong>\r\n        <div>{post.body}</div>\r\n      </div>\r\n      <div style={{ marginLeft: \"auto\", marginTop: 5 }}>\r\n        <MyButton onClick={(e) => handleRemove(e)}>Delete</MyButton>\r\n      </div>\r\n    </PostContent>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import { motion } from \"framer-motion\";\r\nimport React from \"react\";\r\nimport { GridStyle } from \"../../styles/styles\";\r\nimport PostItem from \"../PostItem\";\r\n\r\nconst PostList = ({ posts, title, removePost }) => {\r\n  const variants = {\r\n    initial: {\r\n      opacity: 0,\r\n      transition: {\r\n        type: \"spring\",\r\n        duration: 3,\r\n      },\r\n    },\r\n    animate: {\r\n      opacity: 1,\r\n      transition: {\r\n        type: \"spring\",\r\n        duration: 3,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: \"center\" }}>{title}</h1>\r\n      {!posts.length ? (\r\n        <h2\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"150px\",\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          No posts\r\n        </h2>\r\n      ) : (\r\n        <GridStyle>\r\n          {posts.map((post, index) => (\r\n            <motion.div\r\n              variants={variants}\r\n              initial=\"initial\"\r\n              animate=\"animate\"\r\n              whileHover={{ scale: 1.025 }}\r\n              key={index + 1}\r\n            >\r\n              <PostItem\r\n                removePost={removePost}\r\n                number={index + 1}\r\n                post={post}\r\n              />\r\n            </motion.div>\r\n          ))}\r\n        </GridStyle>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n","import { useMemo } from \"react\";\r\n//ТАК БЫЛО РАНЬШЕ:\r\n//хук useMemo нужен для кэширования чтобы постоянно не производить сортировку\r\n//колбек отработает только после изменения одного из параметров массива во втором аргументе\r\n//либо меняется сортировка, либо добавляются посты\r\n//функция sort не возвращает новый массив, а мутирует уже существующий\r\n//разворачиваем массив и мутируем его копию\r\n// const sortedPosts = useMemo(() => {\r\n//   if (filter.sort) {\r\n//     return [...posts].sort((a, b) =>\r\n//       a[filter.sort].localeCompare(b[filter.sort])\r\n//     );\r\n//   }\r\n//   return posts;\r\n// }, [filter.sort, posts]);\r\n\r\n// ТЕПЕРЬ ВОТ ТАК:\r\n\r\nexport const useSortedPosts = (posts, sort) => {\r\n  const sortedPosts = useMemo(() => {\r\n    if (sort === \"title\" || sort === \"body\") {\r\n      return [...posts].sort((a, b) => a[sort].localeCompare(b[sort]));\r\n    } else if (sort === \"id\") {\r\n      return [...posts].sort((prev, next) => prev.id - next.id);\r\n    }\r\n    return posts;\r\n  }, [sort, posts]);\r\n  return sortedPosts;\r\n};\r\n\r\n// ТАК БЫЛО РАНЬШЕ :\r\n\r\n//поиск сработает только если изменится состояние в строке поиска\r\n//или отсортированный массив\r\n//   const sortedAndFilteredPosts = useMemo(() => {\r\n//     return sortedPosts.filter((post) =>\r\n//       post.title.toLowerCase().includes(filter.query)\r\n//     );\r\n//   }, [filter.query, sortedPosts]);\r\n//ТАК СЕЙЧАС:\r\nexport const usePosts = (posts, sort, query) => {\r\n  const sortedPosts = useSortedPosts(posts, sort);\r\n\r\n  const sortedAndFilteredPosts = useMemo(() => {\r\n    return sortedPosts.filter((post) =>\r\n      post.title.toLowerCase().includes(query)\r\n    );\r\n  }, [query, sortedPosts]);\r\n  return sortedAndFilteredPosts;\r\n};\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { BackdropStyle } from \"../../styles/styles\";\r\n\r\nconst Backdrop = ({ children, onClick }) => {\r\n  return (\r\n    <BackdropStyle\r\n      onClick={onClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ oapcity: 0 }}\r\n    >\r\n      {children}\r\n    </BackdropStyle>\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React, { useState } from \"react\";\r\nimport MyButton from \"../../UI/MyButton\";\r\nimport MyInput from \"../../UI/MyInput\";\r\n\r\nexport const PostForm = ({ createPost }) => {\r\n  const [post, setPost] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n  });\r\n\r\n  const addNewPost = (e) => {\r\n    e.preventDefault();\r\n    const newPost = {\r\n      id: Date.now(),\r\n      ...post,\r\n    };\r\n    createPost(newPost);\r\n    setPost({ title: \"\", body: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <MyInput\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={post.title}\r\n        onChange={(e) => setPost({ ...post, title: e.target.value })}\r\n      />\r\n      <MyInput\r\n        type=\"text\"\r\n        placeholder=\"Description\"\r\n        value={post.body}\r\n        onChange={(e) => setPost({ ...post, body: e.target.value })}\r\n      />\r\n\r\n      <MyButton style={{ marginTop: 15 }} type=\"submit\" onClick={addNewPost}>\r\n        Create\r\n      </MyButton>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Backdrop from \"../Backdrop\";\r\nimport { ModalContentStyle } from \"../../styles/styles\";\r\nimport { PostForm } from \"../../components/PostForm\";\r\nimport MyButton from \"../MyButton\";\r\nconst flip = {\r\n  hidden: {\r\n    transform: \"scale(0) rotateX(-360deg)\",\r\n    opacity: 0,\r\n    transition: {\r\n      delay: 0.3,\r\n    },\r\n  },\r\n  visible: {\r\n    transform: \" scale(1) rotateX(0deg)\",\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.5,\r\n    },\r\n  },\r\n  exit: {\r\n    transform: \"scale(0) rotateX(360deg)\",\r\n    opacity: 0,\r\n    transition: {\r\n      duration: 0.5,\r\n    },\r\n  },\r\n};\r\nconst MyModal = ({ handleClose, createPost }) => {\r\n  return (\r\n    <Backdrop onClick={handleClose}>\r\n      {/*чтобы клик по инпутам не закрывал модалку нужно написать stopPropagation\r\n//         прекращение всплытия т.к снизу вверх пойдет событие\r\n//     */}\r\n      <ModalContentStyle\r\n        drag\r\n        dragConstraints={{ left: 0, right: 0, top: 0, bottom: 0 }}\r\n        onClick={(e) => e.stopPropagation()}\r\n        variants={flip}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <PostForm createPost={createPost} />\r\n      </ModalContentStyle>\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default MyModal;\r\n","export const getPageCount = (totalCount, limit) => {\r\n  return Math.ceil(totalCount / limit);\r\n};\r\n\r\n//переделать пересчет страниц с хуком useMEmo и кастом хуком usePagination\r\n\r\nexport const getPagesArray = (totalPages) => {\r\n  let result = [];\r\n  for (let i = 0; i < totalPages; i++) {\r\n    result.push(i + 1);\r\n  }\r\n  return result;\r\n};\r\n","import React from \"react\";\r\nimport { PageWrapperStyle } from \"../../styles/styles\";\r\nimport MyButton from \"../MyButton\";\r\nimport { getPagesArray } from \"../../utils/pages\";\r\nconst Pagination = ({ totalPages, page, changePage }) => {\r\n  let pagesArray = getPagesArray(totalPages);\r\n\r\n  return (\r\n    <PageWrapperStyle>\r\n      {pagesArray.map((p) => (\r\n        <MyButton\r\n          className={\r\n            page === p ? \"PageButtonStyle pageCurrentStyle\" : \"PageButtonStyle\"\r\n          }\r\n          key={p}\r\n          onClick={() => changePage(p)}\r\n        >\r\n          {p}\r\n        </MyButton>\r\n      ))}\r\n    </PageWrapperStyle>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import About from \"../pages/About\";\r\nimport Login from \"../pages/Login\";\r\nimport PostIdPage from \"../pages/PostIdPage\";\r\nimport Posts from \"../pages/Posts\";\r\n\r\nexport const privateRoutes = [\r\n  { path: \"/about\", component: About, exact: true },\r\n  { path: \"/posts\", component: Posts, exact: true },\r\n  { path: \"/posts/:id\", component: PostIdPage, exact: true },\r\n];\r\n\r\nexport const publicRoutes = [{ path: \"/login\", component: Login, exact: true }];\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PostFilter from \"../components/PostFilter\";\r\nimport PostList from \"../components/PostList\";\r\nimport { usePosts } from \"../customHooks/usePosts.js\";\r\nimport MyButton from \"../UI/MyButton/index.js\";\r\nimport MyModal from \"../UI/MyModal/index.js\";\r\nimport PostService from \"../API/PostService\";\r\nimport MyLoader from \"../UI/MyLoader/index.js\";\r\nimport { useFetching } from \"../customHooks/useFetching.js\";\r\nimport { getPageCount } from \"../utils/pages\";\r\nimport Pagination from \"../UI/MyPagination/index.js\";\r\nimport { useObserver } from \"../customHooks/useObserver\";\r\nimport MySelect from \"../UI/MySelect\";\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nconst Posts = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const sortedAndFilteredPosts = usePosts(posts, filter.sort, filter.query);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const close = () => setModalOpen(false);\r\n  const open = () => setModalOpen(true);\r\n  //раскомментировать для динамической пагинации\r\n  //const lastElement = useRef();\r\n\r\n  //кастомный хук для запроса и отображения лоадера\r\n  const [fetchPosts, isPostLoading, error] = useFetching(\r\n    async (limit, page) => {\r\n      const response = await PostService.getAll(limit, page);\r\n      //Для динамической пагинации закомментировать это\r\n      setPosts(response.data);\r\n      // Для динамической пагинации раскомментировать это\r\n      // setPosts([...posts, ...response.data]);\r\n      const totalCount = response.headers[\"x-total-count\"];\r\n      setTotalPages(getPageCount(totalCount, limit));\r\n    }\r\n  );\r\n  //Для динамической пагинации раскомментировать это\r\n  // useObserver(lastElement, page < totalPages, isPostLoading, () => {\r\n  //   setPage(page + 1);\r\n  // });\r\n\r\n  //Для динамической пагинации закомментировать это\r\n  useEffect(() => {\r\n    fetchPosts(limit, page);\r\n  }, [page, limit]);\r\n\r\n  //Для динамической пагинации раскомментировать это\r\n  // useEffect(() => {\r\n  //   fetchPosts(limit, page);\r\n  // }, [page, limit]);\r\n\r\n  const changePage = (page) => {\r\n    setPage(page);\r\n  };\r\n  //создание поста\r\n  const createPost = (newPost) => {\r\n    setPosts([...posts, newPost]);\r\n    close();\r\n  };\r\n\r\n  //удаление поста по id\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter((p) => post.id !== p.id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          margin: \"0 auto\",\r\n          width: \"25%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <MyButton\r\n          style={{ marginTop: 30, width: \"40%\" }}\r\n          onClick={() => (modalOpen ? close() : open())}\r\n        >\r\n          Create post\r\n        </MyButton>\r\n\r\n        <AnimatePresence\r\n          initial={false}\r\n          exitBeforeEnter={true}\r\n          onExitComplete={() => null}\r\n        >\r\n          {modalOpen && <MyModal handleClose={close} createPost={createPost} />}\r\n        </AnimatePresence>\r\n\r\n        <hr style={{ margin: \"15px 0\" }} />\r\n        <PostFilter filter={filter} setFilter={setFilter} />\r\n        <MySelect\r\n          value={limit}\r\n          defaultValue=\"Number of posts on the page\"\r\n          onChange={(value) => setLimit(value)}\r\n          options={[\r\n            { value: 5, name: \"5\" },\r\n            { value: 10, name: \"10\" },\r\n            { value: 25, name: \"25\" },\r\n            { value: 100, name: \"Show all\" },\r\n          ]}\r\n        />\r\n      </div>\r\n      {error && <h1>Error ${error}</h1>}\r\n      {isPostLoading ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"150px\",\r\n          }}\r\n        >\r\n          <MyLoader />\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <PostList\r\n            removePost={removePost}\r\n            posts={sortedAndFilteredPosts}\r\n            title=\"Post List\"\r\n          />\r\n        </div>\r\n      )}\r\n      {/* Для динамической пагинции раскомментировать это */}\r\n      {/* <PostList\r\n        removePost={removePost}\r\n        posts={sortedAndFilteredPosts}\r\n        title=\"Список постов\"\r\n      />\r\n      <div ref={lastElement} />\r\n      {isPostLoading && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"150px\",\r\n          }}\r\n        >\r\n          <MyLoader />\r\n        </div>\r\n      )} */}\r\n      <Pagination totalPages={totalPages} page={page} changePage={changePage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { privateRoutes, publicRoutes } from \"../../router\";\r\nimport { AuthContext } from \"../../context\";\r\nimport MyLoader from \"../../UI/MyLoader\";\r\n\r\nconst AppRouter = () => {\r\n  const { isAuth, isLoading } = useContext(AuthContext);\r\n\r\n  if (isLoading) {\r\n    return <MyLoader />;\r\n  }\r\n  return isAuth ? (\r\n    <Switch>\r\n      {privateRoutes.map((route, index) => (\r\n        <Route\r\n          key={route.path}\r\n          component={route.component}\r\n          path={route.path}\r\n          exact={route.exact}\r\n        />\r\n      ))}\r\n      <Redirect to=\"/posts\" />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      {publicRoutes.map((route, index) => (\r\n        <Route\r\n          key={route.path}\r\n          component={route.component}\r\n          path={route.path}\r\n          exact={route.exact}\r\n        />\r\n      ))}\r\n      <Redirect to=\"/login\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context\";\r\nimport { NavbarStyle } from \"../../styles/styles\";\r\nimport MyButton from \"../MyButton\";\r\n\r\nconst MyNavbar = () => {\r\n  const { setIsAuth } = useContext(AuthContext);\r\n\r\n  const logout = () => {\r\n    setIsAuth(false);\r\n    localStorage.removeItem(\"auth\");\r\n  };\r\n  return (\r\n    <NavbarStyle>\r\n      <MyButton light onClick={logout}>\r\n        Exit\r\n      </MyButton>\r\n      <div style={{ marginLeft: \"auto\" }}>\r\n        <Link to=\"/about\">About</Link>\r\n        <Link to=\"/\">Posts</Link>\r\n      </div>\r\n    </NavbarStyle>\r\n  );\r\n};\r\n\r\nexport default MyNavbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\nimport { AuthContext } from \"./context\";\r\nimport MyNavbar from \"./UI/MyNavbar\";\r\n\r\nconst App = () => {\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"auth\")) {\r\n      setIsAuth(true);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isAuth,\r\n        setIsAuth,\r\n        isLoading,\r\n      }}\r\n    >\r\n      <BrowserRouter>\r\n        <MyNavbar />\r\n        <AppRouter />\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst Global = createGlobalStyle`\r\n*{\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box; \r\n}\r\n \r\n${\r\n  \"\" /* #root {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n} */\r\n}\r\n}\r\n`;\r\n\r\nexport default Global;\r\n\r\n//  ::-webkit-scrollbar {\r\n//      width: 0;\r\n//   }\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Global from \"./styles/Global\";\n\nReactDOM.render(\n  <>\n    <Global />\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}